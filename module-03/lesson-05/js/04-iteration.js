/**
 * –Ü—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ –º–∞—Å–∏–≤—É
 *
 * - –Ü—Ç–µ—Ä–∞—Ü—ñ—è –ø–æ –º–∞—Å–∏–≤—É —Ü–∏–∫–ª–æ–º for
 * - –ú–µ—Ç–æ–¥ includes
 * - –¶–∏–∫–ª for...of
 * - –í—ñ–¥–º—ñ–Ω–Ω—ñ—Å—Ç—å —É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ for —ñ for...of
 */


// if (friends.includes("Oleh")) {
//     for (let i = 0; i < friends.length; i++) { // 0 (friends[0]) -> 1 (friends[1])
//         console.log("HELLO " + friends[i]);    
//     }
// }








// const friends = ["Mango", "Kiwi", "Poly", "Ajax"];

// for (const friend of friends) {
//     console.log(friend);
// }

// for (let i = 0; i < friends.length; i++) {
//     const friend = friends[i];

//     console.log(friend);
// }

// for (let friend of friends) {
//   console.log(friend);
//   console.log(friends);
// }


// const nums = [1,2,3,4,5]


// let sum = 0;

// for (const number of nums) {
//     sum += number;
// }

// console.log(sum);

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏
 * –∑–Ω–∞—á–µ–Ω–Ω—è, —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.
 * –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
 */

// const values = "8 11";

// const area = values.split(' ');

// console.log(area[0] * area[1]);

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits.
 * –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫
 * —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞.
 * –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
 */

// const fruits = ["üçé", "üçá", "üçë", "üçå", "üçã"];


// for (let i = 0; i < fruits.length; i++) {
//     console.log(`${i + 1}: ${fruits[i]}`);
// }